{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{275:function(v,_,t){\"use strict\";t.r(_);var e=t(0),i=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":v.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"浏览器是如何工作的\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#浏览器是如何工作的\"}},[v._v(\"#\")]),v._v(\" 浏览器是如何工作的\")]),v._v(\" \"),t(\"br\"),v._v(\" \"),t(\"h2\",{attrs:{id:\"浏览器内核\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#浏览器内核\"}},[v._v(\"#\")]),v._v(\" 浏览器内核\")]),v._v(\" \"),t(\"ol\",[t(\"li\",[t(\"p\",[v._v(\"定义:\")]),v._v(\" \"),t(\"p\",[v._v('浏览器核心部分是\"Rendering Engine\"即解析引擎，也叫浏览器内核。另外所谓的浏览器内核也就是浏览器所采用的喧嚷引擎，同一网页在不同的内核的浏览器里的渲染（显示）效果也可能不同；')])]),v._v(\" \"),t(\"li\",[t(\"p\",[v._v(\"常见的浏览器内核：\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[v._v(\"IE浏览器：\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"内核是：Trident；\")]),v._v(\" \"),t(\"li\",[v._v(\"特点是：\\nTrident内核曾经几乎与W3C标准脱节（2005年），二是Trident内核的大量 Bug等安全性问题没有得到及时解决；\")])])]),v._v(\" \"),t(\"li\",[t(\"p\",[v._v(\"火狐浏览器：\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"内核是：Gecko；\")]),v._v(\" \"),t(\"li\",[v._v(\"特点是：\\n代码完全公开，可以让全世界程序员为其编写代码，增加功能；\")])])]),v._v(\" \"),t(\"li\",[t(\"p\",[v._v(\"Opera浏览器：\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"内核是：Presto；\")]),v._v(\" \"),t(\"li\",[v._v(\"特点是：\\n公认的网页浏览速度最快的浏览器内核，但却牺牲了网页的兼容性；\")])])]),v._v(\" \"),t(\"li\",[t(\"p\",[v._v(\"Safari和Chrome浏览器：\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"内核是：Webkit；\")]),v._v(\" \"),t(\"li\",[v._v(\"特点是：\\n自由软件，同时开放源代码。在安全方面不受IE、Firefox的制约；\")])])])])])]),v._v(\" \"),t(\"h2\",{attrs:{id:\"浏览器渲染原理和过程\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#浏览器渲染原理和过程\"}},[v._v(\"#\")]),v._v(\" 浏览器渲染原理和过程\")]),v._v(\" \"),t(\"ol\",[t(\"li\",[t(\"p\",[v._v(\"渲染原理：\")]),v._v(\" \"),t(\"p\",[v._v(\"页面渲染就是浏览器将html代码根据CSS定义的规则显示在浏览器窗口中的这个过程；\")])]),v._v(\" \"),t(\"li\",[t(\"p\",[v._v(\"渲染过程：\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[t(\"strong\",[v._v(\"解析HTML以构建DOM树（Parsing HTML to construct the DOM tree ）\")]),v._v(\"：\")]),v._v(\" \"),t(\"p\",[v._v(\"渲染引擎开始解析HTML文档，转换树中的标签到DOM节点，它被称为“内容树”；\")])]),v._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[v._v(\"构建渲染树（Render tree construction）\")]),v._v(\"：\")]),v._v(\" \"),t(\"p\",[v._v(\"解析CSS（包括外部CSS文件和样式元素），根据CSS选择器计算出节点的样式，创建另一个树 --- 渲染树；\")])]),v._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[v._v(\"布局渲染树（Layout of the render tree）\")]),v._v(\" :\")]),v._v(\" \"),t(\"p\",[v._v(\"从根节点递归调用，计算每一个元素的大小、位置等，给每个节点所应该出现在屏幕上的精确坐标；\")])]),v._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[v._v(\"绘制渲染树（Painting the render tree）\")]),v._v(\" :\")]),v._v(\" \"),t(\"p\",[v._v(\"遍历渲染树，每个节点将使用UI后端层来绘制；\")])])])])]),v._v(\" \"),t(\"h2\",{attrs:{id:\"浏览器css性能\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#浏览器css性能\"}},[v._v(\"#\")]),v._v(\" 浏览器CSS性能\")]),v._v(\" \"),t(\"ol\",[t(\"li\",[t(\"p\",[v._v(\"CSS引擎查找顺序：\")]),v._v(\" \"),t(\"p\",[v._v(\"对每条规则（即选择器）都按从右到左的顺序去匹配；\")])]),v._v(\" \"),t(\"li\",[t(\"p\",[v._v(\"CSS性能提升方案：\")]),v._v(\" \"),t(\"ul\",[t(\"li\",[v._v(\"避免使用通配规则，如*{}；\")]),v._v(\" \"),t(\"li\",[v._v(\"尽量少的去对标签进行选择，而是用class，如：#nav li{},可以为li加上nav_item的类名，如下选择.nav_item{}；\")]),v._v(\" \"),t(\"li\",[v._v(\"不要去用标签限定ID或者类选择符，如：ul#nav,应该简化为#nav；\")]),v._v(\" \"),t(\"li\",[v._v(\"尽量少的去使用后代选择器，降低选择器的权重值；\")]),v._v(\" \"),t(\"li\",[v._v(\"可以尝试考虑一下继承；\")])])])])])}),[],!1,null,null,null);_.default=i.exports}}]);","extractedComments":[]}