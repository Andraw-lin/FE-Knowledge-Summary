{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{296:function(t,s,a){\"use strict\";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"前端中常见的算法题\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前端中常见的算法题\"}},[t._v(\"#\")]),t._v(\" 前端中常见的算法题\")]),t._v(\" \"),a(\"p\",[t._v(\"本文主要总结一下常见的算法题，注重积累，所谓厚积薄发啦。🤔\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"找出数组中重复次数最多的元素\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#找出数组中重复次数最多的元素\"}},[t._v(\"#\")]),t._v(\" 找出数组中重复次数最多的元素\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"栗子：\")])]),t._v(\" \"),a(\"p\",[t._v(\"[1, 2, 3, 1, 5, 6]  重复次数最的元素为 1\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"中心思路：\")])]),t._v(\" \"),a(\"p\",[t._v(\"新创建一个对象，开始遍历数组，每次都判断当前遍历的元素是否在对象中，有就将对象相应的元素值 +1，若不存在则初始化其值为1，另外需要两个变量分别保存当前出现最多的次数值和出现次数最多的元素，一旦在遍历过程中大于该保存次数，则直接把该次数重新赋予在变量中以及属性变量中。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"水仙花数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#水仙花数\"}},[t._v(\"#\")]),t._v(\" 水仙花数\")]),t._v(\" \"),a(\"p\",[t._v(\"先简单说明一下什么是水仙花数，其实就是一个数字有 N 位数，那么这个数字每一位数字的 N 次方和就等于本身。\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"栗子：\")])]),t._v(\" \"),a(\"p\",[t._v(\"153 = 1^3 + 5^3 + 3^3\")]),t._v(\" \"),a(\"p\",[t._v(\"370 = 3^3 + 7^3 + 0^3\")]),t._v(\" \"),a(\"p\",[t._v(\"1634 = 14^4 + 64^4 + 34^4 + 44^4\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"判断一个数是否为水仙花数思路：\")])]),t._v(\" \"),a(\"p\",[t._v(\"直接将一个数 A 转化为字符串 B，拿出它的长度 L，遍历字符串 B，每个元素的 L 次方相加，直接判断总和是否和 A 相等，若是则为水仙花数，若不是则不是水仙花数。\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"给出 n，找到所有的 n 位十进制水仙花数思路：\")])]),t._v(\" \"),a(\"p\",[t._v(\"先确定要搜索的范围，10 ** (n-1) ~ 10 ** n，接着从最小值到最大值之间的数进行遍历，判断每一个是否为水仙花数，拿出来。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"反转一个3位整数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#反转一个3位整数\"}},[t._v(\"#\")]),t._v(\" 反转一个3位整数\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"栗子\")])]),t._v(\" \"),a(\"p\",[t._v(\"123 反转后为 321\")]),t._v(\" \"),a(\"p\",[t._v(\"900 反转后为 9\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"数组操作\")])]),t._v(\" \"),a(\"p\",[t._v(\"+[number.toString()].reverse().join('')\")]),t._v(\" \"),a(\"p\",[t._v(\"相当于\")]),t._v(\" \"),a(\"p\",[t._v(\"parseInt([number.toString()].reverse().join(''))\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"爬楼梯\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#爬楼梯\"}},[t._v(\"#\")]),t._v(\" 爬楼梯\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"栗子\")])]),t._v(\" \"),a(\"p\",[t._v(\"一个小孩爬一个 n 层台阶的楼梯，他每次可以跳 1 步、2 步或者 3 步，那么 n 层楼梯有多少种不同的爬法？\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"类似斐波那契数列处理，递归思想\")])]),t._v(\" \"),a(\"p\",[t._v(\"1层楼梯，1中方案\")]),t._v(\" \"),a(\"p\",[t._v(\"2层楼梯，2种方案\")]),t._v(\" \"),a(\"p\",[t._v(\"3层楼梯，4中方案\")]),t._v(\" \"),a(\"p\",[t._v(\"4层楼梯，7种方案\")]),t._v(\" \"),a(\"p\",[t._v(\"5层楼梯，13种方案\")]),t._v(\" \"),a(\"p\",[t._v(\"好明显，n层楼梯有F(n-1) + F(n-2) + F(n-3)种方案。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"丑数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#丑数\"}},[t._v(\"#\")]),t._v(\" 丑数\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"栗子\")])]),t._v(\" \"),a(\"p\",[t._v(\"设计一个算法，找出只含素因子 2，3，5的第 n 小的数。\")]),t._v(\" \"),a(\"p\",[t._v(\"符合条件的数如：1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 18, 20, 24, ...\")]),t._v(\" \"),a(\"p\",[t._v(\"需要说明的是，符合条件的数基本都是素因子的倍数，除了 1 之外。\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"处理思路\")])]),t._v(\" \"),a(\"p\",[t._v(\"通过三个变量分别保存2，3，5三个值的初始索引，遍历n次，每次都将2，3，5乘以各自变量，然后取最小值push进一个新的数组中，相应的最小值索引加1，以此类推。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 18, 20, 24]\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"nthUglyNumber\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"n\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" arr \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" min\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    nex2\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    nex3\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    nex5\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    i2 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" i3 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" i5 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" i \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 除了第一个数，每个数都是2、3、5的倍数，把它们的倍数找出来，数字较小添加进去\")]),t._v(\"\\n    nex2 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" arr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i2\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    nex3 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" arr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i3\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    nex5 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" arr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i5\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    min \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" Math\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"min\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"nex2\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" nex3\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" nex5\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 增加他们的倍数 为下次计算做准备\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"min \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" nex2\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" i2\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"min \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" nex3\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" i3\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"min \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" nex5\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" i5\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    arr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"push\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"min\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" arr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"arr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// return arr\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}