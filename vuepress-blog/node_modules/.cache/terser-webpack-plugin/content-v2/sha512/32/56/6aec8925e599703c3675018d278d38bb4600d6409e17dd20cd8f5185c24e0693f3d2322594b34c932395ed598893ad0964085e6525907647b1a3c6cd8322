{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{292:function(t,e,r){\"use strict\";r.r(e);var a=r(0),_=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[r(\"h1\",{attrs:{id:\"微前端\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#微前端\"}},[t._v(\"#\")]),t._v(\" 微前端\")]),t._v(\" \"),r(\"p\",[t._v(\"可以参考好的文章，后面我会做一个简答的总结。😄\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[r(\"a\",{attrs:{href:\"https://juejin.im/post/5e15a8e4e51d4541216298c3\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"关于微前端你必须了解的三种实现方式\"),r(\"OutboundLink\")],1)]),t._v(\" \"),r(\"li\",[r(\"a\",{attrs:{href:\"https://juejin.im/post/5b45d0ea6fb9a04fa42f9f1a#heading-6\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"实施微前端的六种方式\"),r(\"OutboundLink\")],1)])]),t._v(\" \"),r(\"h2\",{attrs:{id:\"微前端存在的意义和价值\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#微前端存在的意义和价值\"}},[t._v(\"#\")]),t._v(\" 微前端存在的意义和价值\")]),t._v(\" \"),r(\"p\",[r(\"strong\",[t._v(\"微前端(可以说是一种类似微服务的架构，它将微服务理念应用于浏览器端)，就是将单页面应用拆分为多个小型应用所组成的应用。\")])]),t._v(\" \"),r(\"p\",[t._v(\"微前端架构锁拆分出来的小应用，都是可以\"),r(\"strong\",[t._v(\"独立运行、独立开发、独立部署\")]),t._v(\"的。\")]),t._v(\" \"),r(\"p\",[t._v(\"微前端架构的好处在于以下几个方面。\")]),t._v(\" \"),r(\"ol\",[r(\"li\",[t._v(\"降低代码耦合。\")]),t._v(\" \"),r(\"li\",[t._v(\"适合迁移大型应用代码，单独拆分出来应用可以独立部署，不影响整成使用。\")]),t._v(\" \"),r(\"li\",[t._v(\"团队可在拆分应用中安排人手独立开发和维护。\")])]),t._v(\" \"),r(\"h2\",{attrs:{id:\"实现微前端常见方式\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实现微前端常见方式\"}},[t._v(\"#\")]),t._v(\" 实现微前端常见方式\")]),t._v(\" \"),r(\"ol\",[r(\"li\",[r(\"p\",[t._v(\"iframe\")]),t._v(\" \"),r(\"p\",[t._v(\"使用iframe容器注入应用，可以说是最古老也是效果不错的方式。iframe容器中可以独立管理不同应用，然后\"),r(\"strong\",[t._v(\"通过postmessage通信或者iframeEl.contentWindow通信\")])])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"HTTP服务器路由跳转\")]),t._v(\" \"),r(\"p\",[t._v(\"最常见的就是使用Ngix HTTP服务器，先将应用拆分为两个小应用，并独立部署后，根据路由跳转到相应的小应用中，但需要注意的是，小应用之间是独立开发的，并不产生耦合条件\")])]),t._v(\" \"),r(\"li\",[r(\"p\",[t._v(\"第三方框架实现\")]),t._v(\" \"),r(\"p\",[t._v(\"常见的如single-spa框架，其实现原理就是将每个子应用都打包成一个独立的js文件，通过\"),r(\"code\",[t._v(\"registerApplication\")]),t._v(\"接口来约定应用于主框架交互行为\")])])])])}),[],!1,null,null,null);e.default=_.exports}}]);","extractedComments":[]}