{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{311:function(t,s,a){\"use strict\";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"聊聊前端常见的存储方式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#聊聊前端常见的存储方式\"}},[t._v(\"#\")]),t._v(\" 聊聊前端常见的存储方式\")]),t._v(\" \"),a(\"p\",[t._v(\"本文主要是从 Web 层面谈谈常见的几种存储方式，主要分为 \"),a(\"strong\",[t._v(\"Cookie、LocalStorage、SessionStorage 和 indexDB\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[t._v(\"相信你们对这几种存储方式都不陌生，但是在实战过程中，对于如何取舍它们，你们是否能够把握好它们呢？本文主要就是从它们之间的\"),a(\"strong\",[t._v(\"区别以及使用场景\")]),t._v(\"来更加深入地认识它们，当然如果有错误的地方，我也希望大神你能够指出来哈 🤔。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"cookie\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#cookie\"}},[t._v(\"#\")]),t._v(\" Cookie\")]),t._v(\" \"),a(\"p\",[t._v(\"一说到 Cookie，也许很多人就会想起一个经常被问到的面试题，那就是 Cookie、Session 以及 Token 之间到底有何区别呢？这道题我前几天都还有被问到。\")]),t._v(\" \"),a(\"p\",[t._v(\"当然，有兴趣的可以参考一下我的这边文章\"),a(\"a\",{attrs:{href:\"https://andraw-lin.github.io/keep-Learning/javascript/javascript-learning-and-summary/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95%E7%9A%84%E6%80%9D%E8%80%83.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"单点登录的思考\"),a(\"OutboundLink\")],1),t._v(\"，开篇会从 Cookie、Session 以及 Token 进行详细讲述。说句总结的话就是，\"),a(\"strong\",[t._v(\"Cookie 只是为了存储 SessionID 而服务的\")]),t._v(\"～\")]),t._v(\" \"),a(\"p\",[t._v(\"那么，Cookie 天生就具有存储功能，它又会有什么特点以及使用场景呢？\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"Cookie 中的存储值是以键值对形式存在\")]),t._v(\"。具体可以先看看下图。\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-images.githubusercontent.com/15081323/76177125-2a6b3080-61ee-11ea-90f6-ba8889474e92.jpg\",alt:\"Cookie存储图\"}})]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"Cookie 中存储的数据可以设置其过期时间，因此常常会被用于做一些记住密码功能、购物车功能以及记录用户浏览数据等等\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[t._v(\"另外的话，还有一个很重要的特点，就是\"),a(\"strong\",[t._v(\"每一次请求里都会自动携带指定域名的 Cookie 数据到达服务器，就不可避免地引起 CSRF、XSS 等问题\")]),t._v(\"，当然在上面提到单点登录文章中也会详细提及到，有兴趣的可以翻回去看看。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"Cookie 在存储数据时也会有大小限制，一般会限制在 4kb 内\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[t._v(\"当然，Cookie 中还有一些必要的字段可以再细讲，但是不在本文讨论当中，有兴趣的可以访问\"),a(\"a\",{attrs:{href:\"https://andraw-lin.github.io/keep-Learning/network/network-learning-and-summary/HTTP.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"瞧瞧 HTTP\"),a(\"OutboundLink\")],1),t._v(\"，里面会有对 Cookie 中常用字段进行解读～\")]),t._v(\" \"),a(\"p\",[t._v(\"还有一点需要特别注意的，\"),a(\"strong\",[t._v(\"Cookie 不支持跨域访问\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[t._v(\"总结一下，Cookie 在我看来最好用的地方在于它本身支持数据有效性，因此对于实现记忆功能类的业务特别容易，但是唯一缺陷在于每次请求都要自动携带 Cookie 以及 Cookie 自身大小的限制。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"localstorage\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#localstorage\"}},[t._v(\"#\")]),t._v(\" LocalStorage\")]),t._v(\" \"),a(\"p\",[t._v(\"LocalStorage 可认为是一种\"),a(\"strong\",[t._v(\"长久存储\")]),t._v(\"的浏览器存储数据方式，\"),a(\"strong\",[t._v(\"只会在用户主动清缓存时才会删除存储的数据\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[t._v(\"与 Cookie 相反，\"),a(\"strong\",[t._v(\"LocalStorage 对于存储数据大小限制在 5M 左右\")]),t._v(\"，极有效滴扩展了数据的存储。当然，LocalStorage 中数据的存储也\"),a(\"strong\",[t._v(\"依然是键值对方式\")]),t._v(\"，可看下图。\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-images.githubusercontent.com/15081323/76179528-31963c80-61f6-11ea-8d2c-2e7159dbab35.png\",alt:\"LocalStorage存储图\"}})]),t._v(\" \"),a(\"p\",[t._v(\"当然，LocalStorage 只会用于客户端存储，不会和服务端之间进行通信。\")]),t._v(\" \"),a(\"p\",[t._v(\"那么对于 LocalStorage 的使用场景，\"),a(\"strong\",[t._v(\"常常会用于存储首屏中所有的请求数据\")]),t._v(\"，那么对于第二次夹在加载首屏时就可以很好滴免去请求时间，\"),a(\"strong\",[t._v(\"加快首屏的访问\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[t._v(\"另外的话，\"),a(\"strong\",[t._v(\"LocalStorage 存储的数据不能跨域访问\")]),t._v(\"。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"sessionstorage\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#sessionstorage\"}},[t._v(\"#\")]),t._v(\" SessionStorage\")]),t._v(\" \"),a(\"p\",[t._v(\"既然有了长期存储的 LocalStorage，那么就得有一个短暂存储的方式，那就是 SessionStorage。\")]),t._v(\" \"),a(\"p\",[t._v(\"SessionStorage 存储数据的有效性是\"),a(\"strong\",[t._v(\"基于当前浏览器窗口\")]),t._v(\"的，那么\"),a(\"strong\",[t._v(\"当前浏览器窗口关闭时，SessionStorage 中的数据也会过期\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[t._v(\"和 LocalStorage 一样，\"),a(\"strong\",[t._v(\"SessionStorage 大小都是限制 5M 左右\")]),t._v(\"，另外的话，也是\"),a(\"strong\",[t._v(\"仅仅作为浏览器的存储方式而不会和服务器进行通信\")]),t._v(\"。也是键值对方式，可以看下图。\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://user-images.githubusercontent.com/15081323/76180525-2a246280-61f9-11ea-96dc-6202b59358d9.png\",alt:\"SessionStorage存储图\"}})]),t._v(\" \"),a(\"p\",[t._v(\"对于 SessionStorage 的使用场景，常常会用于\"),a(\"strong\",[t._v(\"保存用户在页面所填写的表单信息\")]),t._v(\"，那么在用户从其他页面跳转回表单页面时，可以直接输出表单信息，有效滴免去了用户的操作。\")]),t._v(\" \"),a(\"p\",[t._v(\"和 LocalStorage 一样，\"),a(\"strong\",[t._v(\"SessionStoarge 存储的数据依然是无法跨域访问的\")]),t._v(\"。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"indexdb\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#indexdb\"}},[t._v(\"#\")]),t._v(\" IndexDB\")]),t._v(\" \"),a(\"p\",[t._v(\"相信很多童鞋会遇到过一个面试题，那就是如果想在浏览器中存储数据，当数据的大小很大很大，那么你会怎么存储？\")]),t._v(\" \"),a(\"p\",[t._v(\"以前的我会毅然滴选择 LocalStorage 和 SessionStorage。当然还是被面试官怼了回来，如果大小远远超出 LocalStorage 和 SessionStorage 的大小呢？\")]),t._v(\" \"),a(\"p\",[t._v(\"没错，这时候就得使用 IndexDB 进行存储了。那么 \"),a(\"strong\",[t._v(\"IndexDB 是一种用于存储大量结构化数据，如文件或 blobs\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"IndexDB 可以说是一种非关系型的数据库，可以说它是没有存储上限的\")]),t._v(\"。它主要具有以下几大特点。\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[t._v(\"异步处理数据。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"与 Cookie、LocalStorage 和 SessionStorage 处理数据采取同步的方式不一样，IndexDB 在处理数据时是异步处理的\")]),t._v(\"，毕竟处理的数据都是比较大的，若采用同步处理肯定会导致页面卡死状态。\")]),t._v(\" \"),a(\"p\",[t._v(\"先看个🌰：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" indexDb \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" window\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"indexedDB\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"open\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'requestData'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" resultObj \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"null\")]),t._v(\"\\nindexDb\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"onsuccess\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"e\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 成功获取到相应key的IndexDB值时\")]),t._v(\"\\n  resultObj \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" e\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"target\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"result \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// IndexDB中Database对象 \")]),t._v(\"\\n  console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"resultObj\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\nindexDb\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"onerror\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"e\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 失败获取到相应key的IndexDB值时\")]),t._v(\"\\n  console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"e\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"可以看到，对于 IndexDB 访问方式，最后通过回调函数方式处理相应的业务逻辑。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"支持事务处理。\")]),t._v(\" \"),a(\"p\",[t._v(\"由于 IndexDB 可看成是一个数据库，那么\"),a(\"strong\",[t._v(\"对于失败的操作，整个事务都会被取消并且 IndexDB 又会回滚到事务发生之前的状态\")]),t._v(\"。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"存储空间不受限制。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"支持二进制数据存储。\")]),t._v(\" \"),a(\"p\",[t._v(\"除了存储相应字符串类型外，IndexDB 还支持相应的二进制数据，如文件、ArrayBuffer 对象和 Blob 对象等等。\")])])]),t._v(\" \"),a(\"p\",[t._v(\"IndexDB 优点还是挺多的，一般的使用场景\"),a(\"strong\",[t._v(\"主要用于存储数据比较大的文件、Blob 对象\")]),t._v(\"等，可以\"),a(\"strong\",[t._v(\"有效扩展浏览器本地存储的最大限制\")]),t._v(\"。\")])])}),[],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}