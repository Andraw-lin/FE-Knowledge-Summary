(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{297:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"es7-summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es7-summary"}},[t._v("#")]),t._v(" ES7 Summary")]),t._v(" "),a("p",[t._v("ES7 在 ES6 基础上仅仅新增了**求幂运算符（**）**和 "),a("strong",[t._v("Array.prototype.includes()")]),t._v(" 方法。")]),t._v(" "),a("p",[t._v("需要注意的是，"),a("strong",[t._v("在 ES6 中仅仅提供了字符串 includes 实现，而在 ES7 中则在数组中进行完善")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"求幂运算符（-）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#求幂运算符（-）"}},[t._v("#")]),t._v(" 求幂运算符（**）")]),t._v(" "),a("p",[a("strong",[t._v("** 运算符相当于 Math 对象中的 pow 求幂方法")]),t._v("，使用如下。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相当于")]),t._v("\nMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8")]),t._v("\n")])])]),a("p",[t._v("** 运算符和 +- 运算符用法一致，看个🌰：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相当于 num = num ** 3")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8")]),t._v("\n")])])]),a("h2",{attrs:{id:"array-prototype-includes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-prototype-includes"}},[t._v("#")]),t._v(" Array.prototype.includes()")]),t._v(" "),a("p",[t._v("数组中实现的 includes 方法，"),a("strong",[t._v("用于判断一个数组是否包含一个指定的值，如果包含就返回 true，否则返回 false")]),t._v("。")]),t._v(" "),a("p",[t._v("includes 和 indexOf 都是使用 === 来进行比较，但是"),a("strong",[t._v("在 includes 中，NaN === NaN 返回的是 true，而 indexOf 则是返回 false")]),t._v("。")]),t._v(" "),a("p",[t._v("另外，"),a("strong",[t._v("includes 和 indexOf 方法都是认为，+0 === -0")]),t._v("。")])])}),[],!1,null,null,null);s.default=r.exports}}]);